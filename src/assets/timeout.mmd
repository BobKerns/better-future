stateDiagram-v2
    direction LR
    [*] --> Pending
    Pending --> Started : .then()
    Pending --> Started : .start()
    Started --> state=FULFILLED : computation returns
    state=FULFILLED --> Fulfilled
    Started --> STATE=REJECTED : computation throws
    STATE=REJECTED --> Rejected
    Started --> Timeout : timeout
    Timeout --> Rejected
    Pending --> Cancelled : cancel
    Started --> Cancelled : cancel
    Cancelled --> Rejected

    state Pending {
      [*] --> state=PENDING
      state=PENDING --> [*]
    }

    state Started {
      [*] --> state=STARTED
      state=STARTED --> NotifyStarted
      NotifyStarted --> Timer
      NotifyStarted --> Execute
      Execute --> [*]
      Timer --> [*]
      Timer : Start Timer
      NotifyStarted : Notify onStart
    }

    state Fulfilled {
      [*] --> NotifyFulfilled
      NotifyFulfilled --> [*]
      NotifyFulfilled : Notify onFullfilled
    }

    state Rejected {
      [*] --> NotifyRejected
      NotifyRejected --> [*]
      NotifyRejected : Notify onRejected
    }

    state Timeout {
      [*] --> state=TIMEOUT
      state=TIMEOUT --> NotifyTimeout
      NotifyTimeout --> [*]
      NotifyTimeout : Notify onTimeout
    }

    state Cancelled {
      [*] --> state=CANCELLED
      state=CANCELLED --> NotifyCancelled
      NotifyCancelled --> [*]
      NotifyCancelled: Notif onCancelled
    }
